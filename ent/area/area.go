// Code generated by ent, DO NOT EDIT.

package area

const (
	// Label holds the string label denoting the area type in the database.
	Label = "area"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgePoints holds the string denoting the points edge name in mutations.
	EdgePoints = "points"
	// Table holds the table name of the area in the database.
	Table = "areas"
	// PointsTable is the table that holds the points relation/edge. The primary key declared below.
	PointsTable = "area_points"
	// PointsInverseTable is the table name for the Location entity.
	// It exists in this package in order to avoid circular dependency with the "location" package.
	PointsInverseTable = "locations"
)

// Columns holds all SQL columns for area fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// PointsPrimaryKey and PointsColumn2 are the table columns denoting the
	// primary key for the points relation (M2M).
	PointsPrimaryKey = []string{"area_id", "location_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(uint64) error
)

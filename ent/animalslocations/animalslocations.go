// Code generated by ent, DO NOT EDIT.

package animalslocations

import (
	"time"
)

const (
	// Label holds the string label denoting the animalslocations type in the database.
	Label = "animals_locations"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAnimalId holds the string denoting the animalid field in the database.
	FieldAnimalId = "animal_id"
	// FieldLocationId holds the string denoting the locationid field in the database.
	FieldLocationId = "location_id"
	// FieldDateTimeOfVisitLocationPoint holds the string denoting the datetimeofvisitlocationpoint field in the database.
	FieldDateTimeOfVisitLocationPoint = "date_time_of_visit_location_point"
	// EdgeAnimalsLocationsAnimal holds the string denoting the animals_locations_animal edge name in mutations.
	EdgeAnimalsLocationsAnimal = "animals_locations_animal"
	// EdgeAnimalsLocationsLocation holds the string denoting the animals_locations_location edge name in mutations.
	EdgeAnimalsLocationsLocation = "animals_locations_location"
	// Table holds the table name of the animalslocations in the database.
	Table = "animals_locations"
	// AnimalsLocationsAnimalTable is the table that holds the animals_locations_animal relation/edge.
	AnimalsLocationsAnimalTable = "animals_locations"
	// AnimalsLocationsAnimalInverseTable is the table name for the Animal entity.
	// It exists in this package in order to avoid circular dependency with the "animal" package.
	AnimalsLocationsAnimalInverseTable = "animals"
	// AnimalsLocationsAnimalColumn is the table column denoting the animals_locations_animal relation/edge.
	AnimalsLocationsAnimalColumn = "animal_id"
	// AnimalsLocationsLocationTable is the table that holds the animals_locations_location relation/edge.
	AnimalsLocationsLocationTable = "animals_locations"
	// AnimalsLocationsLocationInverseTable is the table name for the Location entity.
	// It exists in this package in order to avoid circular dependency with the "location" package.
	AnimalsLocationsLocationInverseTable = "locations"
	// AnimalsLocationsLocationColumn is the table column denoting the animals_locations_location relation/edge.
	AnimalsLocationsLocationColumn = "location_id"
)

// Columns holds all SQL columns for animalslocations fields.
var Columns = []string{
	FieldID,
	FieldAnimalId,
	FieldLocationId,
	FieldDateTimeOfVisitLocationPoint,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDateTimeOfVisitLocationPoint holds the default value on creation for the "dateTimeOfVisitLocationPoint" field.
	DefaultDateTimeOfVisitLocationPoint func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(uint64) error
)

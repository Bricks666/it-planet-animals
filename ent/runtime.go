// Code generated by ent, DO NOT EDIT.

package ent

import (
	"animals/ent/animal"
	"animals/ent/animaltag"
	"animals/ent/area"
	"animals/ent/location"
	"animals/ent/schema"
	"animals/ent/user"
	"animals/ent/visitedlocation"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	animalFields := schema.Animal{}.Fields()
	_ = animalFields
	// animalDescWeight is the schema descriptor for weight field.
	animalDescWeight := animalFields[1].Descriptor()
	// animal.WeightValidator is a validator for the "weight" field. It is called by the builders before save.
	animal.WeightValidator = animalDescWeight.Validators[0].(func(float32) error)
	// animalDescLength is the schema descriptor for length field.
	animalDescLength := animalFields[2].Descriptor()
	// animal.LengthValidator is a validator for the "length" field. It is called by the builders before save.
	animal.LengthValidator = animalDescLength.Validators[0].(func(float32) error)
	// animalDescHeight is the schema descriptor for height field.
	animalDescHeight := animalFields[3].Descriptor()
	// animal.HeightValidator is a validator for the "height" field. It is called by the builders before save.
	animal.HeightValidator = animalDescHeight.Validators[0].(func(float32) error)
	// animalDescChippingDateTime is the schema descriptor for chipping_date_time field.
	animalDescChippingDateTime := animalFields[6].Descriptor()
	// animal.DefaultChippingDateTime holds the default value on creation for the chipping_date_time field.
	animal.DefaultChippingDateTime = animalDescChippingDateTime.Default.(func() time.Time)
	// animalDescID is the schema descriptor for id field.
	animalDescID := animalFields[0].Descriptor()
	// animal.IDValidator is a validator for the "id" field. It is called by the builders before save.
	animal.IDValidator = animalDescID.Validators[0].(func(uint64) error)
	animaltagFields := schema.AnimalTag{}.Fields()
	_ = animaltagFields
	// animaltagDescType is the schema descriptor for type field.
	animaltagDescType := animaltagFields[1].Descriptor()
	// animaltag.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	animaltag.TypeValidator = animaltagDescType.Validators[0].(func(string) error)
	// animaltagDescID is the schema descriptor for id field.
	animaltagDescID := animaltagFields[0].Descriptor()
	// animaltag.IDValidator is a validator for the "id" field. It is called by the builders before save.
	animaltag.IDValidator = animaltagDescID.Validators[0].(func(uint64) error)
	areaFields := schema.Area{}.Fields()
	_ = areaFields
	// areaDescID is the schema descriptor for id field.
	areaDescID := areaFields[0].Descriptor()
	// area.IDValidator is a validator for the "id" field. It is called by the builders before save.
	area.IDValidator = areaDescID.Validators[0].(func(uint64) error)
	locationFields := schema.Location{}.Fields()
	_ = locationFields
	// locationDescLatitude is the schema descriptor for latitude field.
	locationDescLatitude := locationFields[1].Descriptor()
	// location.LatitudeValidator is a validator for the "latitude" field. It is called by the builders before save.
	location.LatitudeValidator = locationDescLatitude.Validators[0].(func(float64) error)
	// locationDescLongitude is the schema descriptor for longitude field.
	locationDescLongitude := locationFields[2].Descriptor()
	// location.LongitudeValidator is a validator for the "longitude" field. It is called by the builders before save.
	location.LongitudeValidator = locationDescLongitude.Validators[0].(func(float64) error)
	// locationDescID is the schema descriptor for id field.
	locationDescID := locationFields[0].Descriptor()
	// location.IDValidator is a validator for the "id" field. It is called by the builders before save.
	location.IDValidator = locationDescID.Validators[0].(func(uint64) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for firstName field.
	userDescFirstName := userFields[3].Descriptor()
	// user.FirstNameValidator is a validator for the "firstName" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for lastName field.
	userDescLastName := userFields[4].Descriptor()
	// user.LastNameValidator is a validator for the "lastName" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(uint32) error)
	visitedlocationFields := schema.VisitedLocation{}.Fields()
	_ = visitedlocationFields
	// visitedlocationDescID is the schema descriptor for id field.
	visitedlocationDescID := visitedlocationFields[0].Descriptor()
	// visitedlocation.IDValidator is a validator for the "id" field. It is called by the builders before save.
	visitedlocation.IDValidator = visitedlocationDescID.Validators[0].(func(uint64) error)
}

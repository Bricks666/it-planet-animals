// Code generated by ent, DO NOT EDIT.

package animaltag

const (
	// Label holds the string label denoting the animaltag type in the database.
	Label = "animal_tag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// EdgeAnimals holds the string denoting the animals edge name in mutations.
	EdgeAnimals = "animals"
	// EdgeAnimalTypes holds the string denoting the animal_types edge name in mutations.
	EdgeAnimalTypes = "animal_types"
	// Table holds the table name of the animaltag in the database.
	Table = "animal_tags"
	// AnimalsTable is the table that holds the animals relation/edge. The primary key declared below.
	AnimalsTable = "animal_types"
	// AnimalsInverseTable is the table name for the Animal entity.
	// It exists in this package in order to avoid circular dependency with the "animal" package.
	AnimalsInverseTable = "animals"
	// AnimalTypesTable is the table that holds the animal_types relation/edge.
	AnimalTypesTable = "animal_types"
	// AnimalTypesInverseTable is the table name for the AnimalType entity.
	// It exists in this package in order to avoid circular dependency with the "animaltype" package.
	AnimalTypesInverseTable = "animal_types"
	// AnimalTypesColumn is the table column denoting the animal_types relation/edge.
	AnimalTypesColumn = "type_id"
)

// Columns holds all SQL columns for animaltag fields.
var Columns = []string{
	FieldID,
	FieldType,
}

var (
	// AnimalsPrimaryKey and AnimalsColumn2 are the table columns denoting the
	// primary key for the animals relation (M2M).
	AnimalsPrimaryKey = []string{"animal_id", "type_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(uint64) error
)
